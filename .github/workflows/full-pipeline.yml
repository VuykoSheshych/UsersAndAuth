name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Publish to DockerHub
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Remove existing github source (if any)
        run: dotnet nuget remove source github || true

      - name: Authenticate with GitHub Packages
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/VuykoSheshych/index.json \
            --name github \
            --username VuykoSheshych \
            --password ${{ secrets.NUGET_DEPLOY_GITHUB_TOKEN }} \
            --store-password-in-clear-text

      - name: Restore dependencies
        run: dotnet restore UsersAndAuth.csproj

      - name: Publish project
        run: dotnet publish UsersAndAuth.csproj -c Release -o ./publish --no-restore

      - name: Log in to DockerHub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/users-and-auth:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/users-and-auth:latest

  deploy:
    needs: build-and-push
    name: Deploy to Kubernetes
    environment: Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status
          minikube update-context

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          kubectl cluster-info

      - name: Apply Kubernetes manifests
        run: |
          sed -i 's|DOCKER_HUB_USERNAME_REPLACE|${{ secrets.DOCKER_HUB_USERNAME }}|g' k8s/users-and-auth.yaml
          sed -i 's|USERS_DB_CONNECTION_REPLACE|${{ secrets.USERS_DB_CONNECTION }}|g' k8s/users-and-auth.yaml
          sed -i 's|USERS_AND_AUTH_DB_USER_REPLACE|${{ secrets.USERS_AND_AUTH_DB_USER }}|g' k8s/users-and-auth-db.yaml
          sed -i 's|USERS_AND_AUTH_DB_PASSWORD_REPLACE|${{ secrets.USERS_AND_AUTH_DB_PASSWORD }}|g' k8s/users-and-auth-db.yaml
          sed -i 's|USERS_AND_AUTH_DB_REPLACE|${{ secrets.USERS_AND_AUTH_DB }}|g' k8s/users-and-auth-db.yaml
          sed -i 's|JWT_OPTIONS_REPLACE|${{ secrets.JWT_OPTIONS }}|g' k8s/users-and-auth.yaml
          sed -i 's|FRONTEND_URL_REPLACE|${{ secrets.FRONTEND_URL }}|g' k8s/users-and-auth.yaml
          kubectl apply -f k8s/

      - name: Update deployment images
        run: |
          kubectl set image deployment/users-and-auth users-and-auth=${{ secrets.DOCKER_HUB_USERNAME }}/users-and-auth:latest
          kubectl rollout restart deployment/users-and-auth
